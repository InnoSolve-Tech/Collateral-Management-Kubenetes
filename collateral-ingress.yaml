# --- INGRESS CLASS ---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx-ingress
  labels:
    app.kubernetes.io/component: controller
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: k8s.io/ingress-nginx

---
# --- INGRESS RESOURCE ---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: collateral-ingress
  annotations:
    # File handling
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    
    # CORS and authentication for file downloads
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  ingressClassName: nginx-ingress
  rules:
  - host: collateral.local
    http:
      paths:
      - path: /api/v1
        pathType: Prefix
        backend:
          service:
            name: collateral-api-service
            port:
              number: 8008
      - path: /images
        pathType: Prefix
        backend:
          service:
            name: collateral-web-service
            port:
              number: 3000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: collateral-web-service
            port:
              number: 3000