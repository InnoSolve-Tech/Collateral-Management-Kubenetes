apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  template:
    metadata:
      labels:
        app: mssql
    spec:
      containers:
        - name: mssql
          image: mcr.microsoft.com/mssql/server:2019-latest
          ports:
            - containerPort: 1433
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-secret
                  key: sa-password
          volumeMounts:
            - name: initdb
              mountPath: /usr/config
          command:
            - /bin/bash
            - "-c"
            - |
              # Start SQL Server in background
              /opt/mssql/bin/sqlservr &
              
              echo "Waiting for SQL Server to start..."
              # Wait until SQL Server is ready
              until /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$SA_PASSWORD" -Q "SELECT 1" > /dev/null 2>&1; do
                echo "Waiting for SQL Server to become available..."
                sleep 2
              done
              
              echo "Running initialization script..."
              /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$SA_PASSWORD" -i /usr/config/init.sql
              
              wait # Keep container running
      volumes:
        - name: initdb
          configMap:
            name: mssql-initdb
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-service
spec:
  selector:
    app: mssql
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433